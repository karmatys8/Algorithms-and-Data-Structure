'''
Task: We get a full matrix graph (G). G[i][j] is a rate at which we can convert currency i to currency j.
      Determine if there is a cycle of trades after which we increase our amount of money.
'''



from math import log10


def currency_exploit(G):
    ln = len(G)
    
    for i in range(ln):
        G[i] = list(map(
            lambda elem: -log10(elem), G[i]))
    
    
    inf = float('inf')
    dist = [inf for _ in range(ln)]
    parents = [None for _ in range(ln)]
    
    dist[0] = 0
    
    for _ in range(ln -1):
        for u in range(ln):
            for v in range(ln):
                if dist[v] > dist[u] + G[u][v]:
                    dist[v] = dist[u] + G[u][v]
                    parents[v] = u
    
    delta = 1e-15
    for i in range(ln):
        for j in range(ln):
            if dist[j] > dist[i] + G[i][j] + delta:
                return True
            
    return False



'''[[1, 0.8, 0.8],
     [1.2500000001, 1, 0.8],
     [0.8, 0.8, 1]]'''
'''[[1, 1, 1.0000000001],
     [1, 1, 1],
     [0.8, 0.7, 1]]'''
G = [[1, 3, 0.8, 7],
     [0.2, 1, 9, 0.5],
     [0.01, 0.11, 1, 0.1],
     [0.1, 0.1, 0.1, 1]]
print(currency_exploit(G))
